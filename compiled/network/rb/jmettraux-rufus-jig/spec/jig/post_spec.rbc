!RBIX
ca3418ca935dcfc5ca725ff4c258506fc1e8a202fb840422db0477120aaa14e9
23
M
1
n
n
x
E
8
US-ASCII
10
__script__
i
53
59
40
0
93
0
48
1
91
93
0
98
91
93
0
73
2
2
93
0
1
73
3
1
93
0
35
59
40
4
93
0
16
5
93
0
16
6
93
0
12
7
93
0
1
74
8
1
93
0
35
61
70
0
I
4
I
0
I
0
I
0
I
0
I
0
n
n
I
0
p
9
x
E
8
US-ASCII
4
File
s
E
5
UTF-8
20
../../spec_helper.rb
x
E
8
US-ASCII
11
expand_path
x
E
8
US-ASCII
7
require
x
E
8
US-ASCII
5
Rufus
x
E
8
US-ASCII
3
Jig
x
E
8
US-ASCII
4
Http
M
1
p
2
x
E
8
US-ASCII
9
for_block
t
n
x
E
8
US-ASCII
9
__block__
i
63
59
48
0
12
1
93
0
1
74
2
1
93
0
35
59
48
0
12
3
93
0
1
74
4
1
93
0
35
57
48
5
48
6
58
64
72
7
93
0
73
8
4
93
0
35
59
48
9
91
93
0
12
10
93
0
1
74
11
1
93
0
70
0
I
6
I
0
I
0
I
0
I
0
I
0
n
n
I
0
p
12
x
E
8
US-ASCII
4
each
M
1
p
2
x
E
8
US-ASCII
9
for_block
t
n
x
E
8
US-ASCII
9
__block__
i
63
78
0
93
0
35
40
1
93
0
16
2
93
0
16
3
93
0
13
9
4
47
19
45
1
72
5
93
0
13
48
6
91
93
0
46
4567
1
73
7
2
93
0
35
17
57
48
6
91
93
0
46
4567
73
4
2
93
0
82
8
93
0
70
0
I
5
I
0
I
0
I
0
I
0
I
0
n
n
I
0
p
9
x
E
8
US-ASCII
12
purge_server
x
E
8
US-ASCII
5
Rufus
x
E
8
US-ASCII
3
Jig
x
E
8
US-ASCII
4
Http
x
E
8
US-ASCII
3
new
x
E
8
US-ASCII
8
allocate
s
E
5
UTF-8
9
127.0.0.1
x
E
8
US-ASCII
10
initialize
x
E
8
US-ASCII
2
@h
p
7
I
-1
I
d
I
0
I
e
I
5
I
f
I
3f
x
E
8
US-ASCII
65
repositories/network/rb/jmettraux-rufus-jig/spec/jig/post_spec.rb
p
0
x
E
8
US-ASCII
6
before
M
1
p
2
x
E
8
US-ASCII
9
for_block
t
n
x
E
8
US-ASCII
9
__block__
i
10
47
0
93
0
72
1
93
0
70
0
I
2
I
0
I
0
I
0
I
0
I
0
n
n
I
0
p
2
x
E
8
US-ASCII
2
@h
x
E
8
US-ASCII
5
close
p
5
I
-1
I
11
I
0
I
12
I
a
x
E
8
US-ASCII
65
repositories/network/rb/jmettraux-rufus-jig/spec/jig/post_spec.rb
p
0
x
E
8
US-ASCII
5
after
x
E
8
US-ASCII
8
location
M
1
n
n
x
E
8
US-ASCII
8
location
i
124
47
0
93
0
72
1
93
0
72
2
93
0
48
3
91
93
0
73
4
1
93
0
83
0
35
49
0
55
51
5
13
22
50
35
41
16
6
93
0
48
7
46
0
73
8
2
93
0
17
28
73
9
1
93
0
19
120
48
10
91
93
0
49
0
48
10
91
93
0
73
11
1
93
0
41
16
12
93
0
1
72
13
93
0
13
46
3
46
-1
1
73
14
2
93
0
35
73
4
1
93
0
48
10
91
93
0
73
15
1
93
0
73
16
1
93
0
83
0
17
122
49
0
70
0
I
7
I
1
I
0
I
0
I
0
I
0
n
n
I
0
p
17
x
E
8
US-ASCII
2
@h
x
E
8
US-ASCII
13
last_response
x
E
8
US-ASCII
7
headers
s
E
5
UTF-8
8
Location
x
E
8
US-ASCII
2
[]
n
x
E
8
US-ASCII
6
Regexp
s
E
5
UTF-8
8
^http://
x
E
8
US-ASCII
3
new
x
E
8
US-ASCII
5
match
s
E
5
UTF-8
1
/
x
E
8
US-ASCII
5
split
x
E
8
US-ASCII
5
Range
x
E
8
US-ASCII
8
allocate
x
E
8
US-ASCII
10
initialize
x
E
8
US-ASCII
4
join
x
E
8
US-ASCII
1
+
p
9
I
-1
I
15
I
0
I
16
I
19
I
17
I
7a
I
0
I
7c
x
E
8
US-ASCII
65
repositories/network/rb/jmettraux-rufus-jig/spec/jig/post_spec.rb
p
1
x
E
8
US-ASCII
1
l
x
E
8
US-ASCII
17
method_visibility
x
E
8
US-ASCII
15
add_defn_method
s
E
5
UTF-8
5
#post
M
1
p
2
x
E
8
US-ASCII
9
for_block
t
n
x
E
8
US-ASCII
9
__block__
i
120
59
48
0
91
93
0
12
1
93
0
1
74
2
1
93
0
35
59
48
3
91
93
0
12
4
93
0
1
74
2
1
93
0
35
59
48
5
91
93
0
12
6
93
0
1
74
2
1
93
0
35
59
48
7
91
93
0
12
8
93
0
1
74
2
1
93
0
35
59
48
9
91
93
0
12
10
93
0
1
74
2
1
93
0
35
59
48
11
91
93
0
12
12
93
0
1
74
2
1
93
0
35
59
48
13
91
93
0
12
14
93
0
1
74
2
1
93
0
70
0
I
4
I
0
I
0
I
0
I
0
I
0
n
n
I
0
p
15
s
E
5
UTF-8
39
returns the body of the server response
M
1
p
2
x
E
8
US-ASCII
9
for_block
t
n
x
E
8
US-ASCII
9
__block__
i
35
47
0
93
0
48
1
91
93
0
48
2
91
93
0
73
3
2
93
0
72
4
93
0
48
5
91
93
0
73
6
1
93
0
70
0
I
4
I
0
I
0
I
0
I
0
I
0
n
n
I
0
p
7
x
E
8
US-ASCII
2
@h
s
E
5
UTF-8
10
/documents
s
E
5
UTF-8
4
nada
x
E
8
US-ASCII
4
post
x
E
8
US-ASCII
6
should
s
E
5
UTF-8
8
created.
x
E
8
US-ASCII
2
==
p
5
I
-1
I
1c
I
0
I
1e
I
23
x
E
8
US-ASCII
65
repositories/network/rb/jmettraux-rufus-jig/spec/jig/post_spec.rb
p
0
x
E
8
US-ASCII
2
it
s
E
5
UTF-8
33
encodes hashes as JSON by default
M
1
p
2
x
E
8
US-ASCII
9
for_block
t
n
x
E
8
US-ASCII
9
__block__
i
120
47
0
93
0
48
1
91
93
0
41
16
2
93
0
46
1
73
3
1
93
0
13
48
4
91
93
0
48
5
91
93
0
73
6
2
93
0
35
73
7
2
93
0
35
47
0
93
0
78
8
93
0
41
16
2
93
0
46
1
73
3
1
93
0
13
48
9
48
10
73
6
2
93
0
35
73
11
2
93
0
72
12
93
0
41
16
2
93
0
46
1
73
3
1
93
0
13
48
4
91
93
0
48
5
91
93
0
73
6
2
93
0
35
73
13
1
93
0
70
0
I
7
I
0
I
0
I
0
I
0
I
0
n
n
I
0
p
14
x
E
8
US-ASCII
2
@h
s
E
5
UTF-8
10
/documents
x
E
8
US-ASCII
4
Hash
x
E
8
US-ASCII
16
new_from_literal
s
E
5
UTF-8
5
hello
s
E
5
UTF-8
5
world
x
E
8
US-ASCII
3
[]=
x
E
8
US-ASCII
4
post
x
E
8
US-ASCII
8
location
x
E
8
US-ASCII
6
accept
x
E
8
US-ASCII
4
json
x
E
8
US-ASCII
3
get
x
E
8
US-ASCII
6
should
x
E
8
US-ASCII
2
==
p
7
I
-1
I
21
I
0
I
23
I
2c
I
25
I
78
x
E
8
US-ASCII
65
repositories/network/rb/jmettraux-rufus-jig/spec/jig/post_spec.rb
p
0
s
E
5
UTF-8
33
encodes arrays as JSON by default
M
1
p
2
x
E
8
US-ASCII
9
for_block
t
n
x
E
8
US-ASCII
9
__block__
i
96
47
0
93
0
48
1
91
93
0
48
2
91
93
0
48
3
91
93
0
48
4
91
93
0
29
3
73
5
2
93
0
35
47
0
93
0
78
6
93
0
41
16
7
93
0
46
1
73
8
1
93
0
13
48
9
48
10
73
11
2
93
0
35
73
12
2
93
0
72
13
93
0
48
2
91
93
0
48
3
91
93
0
48
4
91
93
0
29
3
73
14
1
93
0
70
0
I
7
I
0
I
0
I
0
I
0
I
0
n
n
I
0
p
15
x
E
8
US-ASCII
2
@h
s
E
5
UTF-8
10
/documents
s
E
5
UTF-8
1
a
s
E
5
UTF-8
1
b
s
E
5
UTF-8
1
c
x
E
8
US-ASCII
4
post
x
E
8
US-ASCII
8
location
x
E
8
US-ASCII
4
Hash
x
E
8
US-ASCII
16
new_from_literal
x
E
8
US-ASCII
6
accept
x
E
8
US-ASCII
4
json
x
E
8
US-ASCII
3
[]=
x
E
8
US-ASCII
3
get
x
E
8
US-ASCII
6
should
x
E
8
US-ASCII
2
==
p
7
I
-1
I
28
I
0
I
2a
I
20
I
2c
I
60
x
E
8
US-ASCII
65
repositories/network/rb/jmettraux-rufus-jig/spec/jig/post_spec.rb
p
0
s
E
5
UTF-8
39
passes strings as text/plain by default
M
1
p
2
x
E
8
US-ASCII
9
for_block
t
n
x
E
8
US-ASCII
9
__block__
i
72
47
0
93
0
48
1
91
93
0
48
2
91
93
0
73
3
2
93
0
35
47
0
93
0
78
4
93
0
41
16
5
93
0
46
1
73
6
1
93
0
13
48
7
48
8
73
9
2
93
0
35
73
10
2
93
0
72
11
93
0
48
2
91
93
0
73
12
1
93
0
70
0
I
7
I
0
I
0
I
0
I
0
I
0
n
n
I
0
p
13
x
E
8
US-ASCII
2
@h
s
E
5
UTF-8
10
/documents
s
E
5
UTF-8
4
nada
x
E
8
US-ASCII
4
post
x
E
8
US-ASCII
8
location
x
E
8
US-ASCII
4
Hash
x
E
8
US-ASCII
16
new_from_literal
x
E
8
US-ASCII
6
accept
x
E
8
US-ASCII
4
json
x
E
8
US-ASCII
3
[]=
x
E
8
US-ASCII
3
get
x
E
8
US-ASCII
6
should
x
E
8
US-ASCII
2
==
p
7
I
-1
I
2f
I
0
I
31
I
14
I
33
I
48
x
E
8
US-ASCII
65
repositories/network/rb/jmettraux-rufus-jig/spec/jig/post_spec.rb
p
0
s
E
5
UTF-8
39
decodes the body of the server response
M
1
p
2
x
E
8
US-ASCII
9
for_block
t
n
x
E
8
US-ASCII
9
__block__
i
87
47
0
93
0
48
1
91
93
0
48
2
91
93
0
41
16
3
93
0
46
1
73
4
1
93
0
13
48
5
48
6
73
7
2
93
0
35
73
8
3
93
0
83
0
35
49
0
72
9
93
0
41
16
3
93
0
46
1
73
4
1
93
0
13
48
10
91
93
0
48
11
91
93
0
73
7
2
93
0
35
73
12
1
93
0
70
0
I
9
I
1
I
0
I
0
I
0
I
0
n
n
I
0
p
13
x
E
8
US-ASCII
2
@h
s
E
5
UTF-8
22
/documents?mirror=true
s
E
5
UTF-8
21
{"msg":"hello world"}
x
E
8
US-ASCII
4
Hash
x
E
8
US-ASCII
16
new_from_literal
x
E
8
US-ASCII
12
content_type
x
E
8
US-ASCII
4
json
x
E
8
US-ASCII
3
[]=
x
E
8
US-ASCII
4
post
x
E
8
US-ASCII
6
should
s
E
5
UTF-8
3
msg
s
E
5
UTF-8
11
hello world
x
E
8
US-ASCII
2
==
p
15
I
-1
I
36
I
0
I
38
I
4
I
39
I
9
I
3a
I
e
I
3b
I
25
I
38
I
2d
I
3d
I
57
x
E
8
US-ASCII
65
repositories/network/rb/jmettraux-rufus-jig/spec/jig/post_spec.rb
p
1
x
E
8
US-ASCII
1
b
s
E
5
UTF-8
25
by default, doesn't cache
M
1
p
2
x
E
8
US-ASCII
9
for_block
t
n
x
E
8
US-ASCII
9
__block__
i
45
47
0
93
0
48
1
91
93
0
48
2
91
93
0
73
3
2
93
0
35
47
0
93
0
72
4
93
0
72
5
93
0
72
6
93
0
46
0
73
7
1
93
0
70
0
I
4
I
0
I
0
I
0
I
0
I
0
n
n
I
0
p
8
x
E
8
US-ASCII
2
@h
s
E
5
UTF-8
20
/documents?etag=true
s
E
5
UTF-8
4
nada
x
E
8
US-ASCII
4
post
x
E
8
US-ASCII
5
cache
x
E
8
US-ASCII
4
size
x
E
8
US-ASCII
6
should
x
E
8
US-ASCII
2
==
p
7
I
-1
I
40
I
0
I
42
I
14
I
44
I
2d
x
E
8
US-ASCII
65
repositories/network/rb/jmettraux-rufus-jig/spec/jig/post_spec.rb
p
0
s
E
5
UTF-8
26
caches when :cache => true
M
1
p
2
x
E
8
US-ASCII
9
for_block
t
n
x
E
8
US-ASCII
9
__block__
i
67
47
0
93
0
48
1
91
93
0
48
2
91
93
0
41
16
3
93
0
46
1
73
4
1
93
0
13
48
5
61
73
6
2
93
0
35
73
7
3
93
0
35
47
0
93
0
72
5
93
0
72
8
93
0
72
9
93
0
46
1
73
10
1
93
0
70
0
I
8
I
0
I
0
I
0
I
0
I
0
n
n
I
0
p
11
x
E
8
US-ASCII
2
@h
s
E
5
UTF-8
20
/documents?etag=true
s
E
5
UTF-8
4
nada
x
E
8
US-ASCII
4
Hash
x
E
8
US-ASCII
16
new_from_literal
x
E
8
US-ASCII
5
cache
x
E
8
US-ASCII
3
[]=
x
E
8
US-ASCII
4
post
x
E
8
US-ASCII
4
size
x
E
8
US-ASCII
6
should
x
E
8
US-ASCII
2
==
p
7
I
-1
I
47
I
0
I
49
I
2a
I
4b
I
43
x
E
8
US-ASCII
65
repositories/network/rb/jmettraux-rufus-jig/spec/jig/post_spec.rb
p
0
p
17
I
-1
I
1a
I
0
I
1c
I
11
I
21
I
22
I
28
I
33
I
2f
I
44
I
36
I
55
I
40
I
66
I
47
I
78
x
E
8
US-ASCII
65
repositories/network/rb/jmettraux-rufus-jig/spec/jig/post_spec.rb
p
0
x
E
8
US-ASCII
8
describe
p
11
I
-1
I
b
I
0
I
d
I
e
I
11
I
1c
I
15
I
2d
I
1a
I
3f
x
E
8
US-ASCII
65
repositories/network/rb/jmettraux-rufus-jig/spec/jig/post_spec.rb
p
0
x
E
8
US-ASCII
8
describe
p
5
I
0
I
8
I
1a
I
b
I
35
x
E
8
US-ASCII
65
repositories/network/rb/jmettraux-rufus-jig/spec/jig/post_spec.rb
p
0
