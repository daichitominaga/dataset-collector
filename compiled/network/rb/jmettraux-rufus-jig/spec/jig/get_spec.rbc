!RBIX
ca3418ca935dcfc5ca725ff4c258506fc1e8a202fb840422db0477120aaa14e9
23
M
1
n
n
x
E
8
US-ASCII
10
__script__
i
53
59
40
0
93
0
48
1
91
93
0
98
91
93
0
73
2
2
93
0
1
73
3
1
93
0
35
59
40
4
93
0
16
5
93
0
16
6
93
0
12
7
93
0
1
74
8
1
93
0
35
61
70
0
I
4
I
0
I
0
I
0
I
0
I
0
n
n
I
0
p
9
x
E
8
US-ASCII
4
File
s
E
5
UTF-8
20
../../spec_helper.rb
x
E
8
US-ASCII
11
expand_path
x
E
8
US-ASCII
7
require
x
E
8
US-ASCII
5
Rufus
x
E
8
US-ASCII
3
Jig
x
E
8
US-ASCII
4
Http
M
1
p
2
x
E
8
US-ASCII
9
for_block
t
n
x
E
8
US-ASCII
9
__block__
i
63
59
48
0
12
1
93
0
1
74
2
1
93
0
35
59
48
0
12
3
93
0
1
74
4
1
93
0
35
59
48
5
91
93
0
12
6
93
0
1
74
7
1
93
0
35
59
48
8
91
93
0
12
9
93
0
1
74
7
1
93
0
70
0
I
4
I
0
I
0
I
0
I
0
I
0
n
n
I
0
p
10
x
E
8
US-ASCII
4
each
M
1
p
2
x
E
8
US-ASCII
9
for_block
t
n
x
E
8
US-ASCII
9
__block__
i
63
78
0
93
0
35
40
1
93
0
16
2
93
0
16
3
93
0
13
9
4
47
19
45
1
72
5
93
0
13
48
6
91
93
0
46
4567
1
73
7
2
93
0
35
17
57
48
6
91
93
0
46
4567
73
4
2
93
0
82
8
93
0
70
0
I
5
I
0
I
0
I
0
I
0
I
0
n
n
I
0
p
9
x
E
8
US-ASCII
12
purge_server
x
E
8
US-ASCII
5
Rufus
x
E
8
US-ASCII
3
Jig
x
E
8
US-ASCII
4
Http
x
E
8
US-ASCII
3
new
x
E
8
US-ASCII
8
allocate
s
E
5
UTF-8
9
127.0.0.1
x
E
8
US-ASCII
10
initialize
x
E
8
US-ASCII
2
@h
p
7
I
-1
I
e
I
0
I
f
I
5
I
10
I
3f
x
E
8
US-ASCII
64
repositories/network/rb/jmettraux-rufus-jig/spec/jig/get_spec.rb
p
0
x
E
8
US-ASCII
6
before
M
1
p
2
x
E
8
US-ASCII
9
for_block
t
n
x
E
8
US-ASCII
9
__block__
i
10
47
0
93
0
72
1
93
0
70
0
I
2
I
0
I
0
I
0
I
0
I
0
n
n
I
0
p
2
x
E
8
US-ASCII
2
@h
x
E
8
US-ASCII
5
close
p
5
I
-1
I
12
I
0
I
13
I
a
x
E
8
US-ASCII
64
repositories/network/rb/jmettraux-rufus-jig/spec/jig/get_spec.rb
p
0
x
E
8
US-ASCII
5
after
s
E
5
UTF-8
4
.new
M
1
p
2
x
E
8
US-ASCII
9
for_block
t
n
x
E
8
US-ASCII
9
__block__
i
32
59
48
0
12
1
93
0
1
74
2
1
93
0
35
59
48
3
91
93
0
12
4
93
0
1
74
5
1
93
0
70
0
I
4
I
0
I
0
I
0
I
0
I
0
n
n
I
0
p
6
x
E
8
US-ASCII
4
each
M
1
p
2
x
E
8
US-ASCII
9
for_block
t
n
x
E
8
US-ASCII
9
__block__
i
56
43
85
0
35
86
18
0
47
0
93
0
72
1
93
0
37
17
51
43
85
1
35
42
13
41
16
2
93
0
92
73
3
1
93
0
24
39
17
44
35
55
11
17
51
35
60
1
69
68
93
0
60
0
69
70
0
I
6
I
0
I
0
I
0
I
0
I
0
n
n
I
0
p
4
x
E
8
US-ASCII
5
@http
x
E
8
US-ASCII
5
close
x
E
8
US-ASCII
13
StandardError
x
E
8
US-ASCII
3
===
p
11
I
-1
I
18
I
0
I
19
I
12
I
0
I
17
I
19
I
33
I
0
I
38
x
E
8
US-ASCII
64
repositories/network/rb/jmettraux-rufus-jig/spec/jig/get_spec.rb
p
0
x
E
8
US-ASCII
5
after
s
E
5
UTF-8
22
connects to the server
M
1
p
2
x
E
8
US-ASCII
9
for_block
t
n
x
E
8
US-ASCII
9
__block__
i
102
40
0
93
0
16
1
93
0
16
2
93
0
13
9
3
47
19
40
1
72
4
93
0
13
48
5
91
93
0
46
4567
1
73
6
2
93
0
35
17
52
48
5
91
93
0
46
4567
73
3
2
93
0
82
7
93
0
35
47
8
93
0
72
9
93
0
72
10
93
0
48
11
91
93
0
73
12
1
93
0
35
59
12
13
93
0
1
74
14
0
93
0
78
15
93
0
73
16
1
93
0
70
0
I
5
I
0
I
0
I
0
I
0
I
0
n
n
I
0
p
17
x
E
8
US-ASCII
5
Rufus
x
E
8
US-ASCII
3
Jig
x
E
8
US-ASCII
4
Http
x
E
8
US-ASCII
3
new
x
E
8
US-ASCII
8
allocate
s
E
5
UTF-8
9
127.0.0.1
x
E
8
US-ASCII
10
initialize
x
E
8
US-ASCII
5
@http
x
E
8
US-ASCII
2
@h
x
E
8
US-ASCII
5
_path
x
E
8
US-ASCII
6
should
s
E
5
UTF-8
0

x
E
8
US-ASCII
2
==
M
1
p
2
x
E
8
US-ASCII
9
for_block
t
n
x
E
8
US-ASCII
9
__block__
i
16
47
0
93
0
48
1
91
93
0
73
2
1
93
0
70
0
I
3
I
0
I
0
I
0
I
0
I
0
n
n
I
0
p
3
x
E
8
US-ASCII
2
@h
s
E
5
UTF-8
1
/
x
E
8
US-ASCII
3
get
p
3
I
-1
I
21
I
10
x
E
8
US-ASCII
64
repositories/network/rb/jmettraux-rufus-jig/spec/jig/get_spec.rb
p
0
x
E
8
US-ASCII
6
lambda
x
E
8
US-ASCII
11
raise_error
x
E
8
US-ASCII
10
should_not
p
9
I
-1
I
1c
I
0
I
1e
I
39
I
20
I
50
I
21
I
66
x
E
8
US-ASCII
64
repositories/network/rb/jmettraux-rufus-jig/spec/jig/get_spec.rb
p
0
x
E
8
US-ASCII
2
it
p
7
I
-1
I
16
I
0
I
18
I
e
I
1c
I
20
x
E
8
US-ASCII
64
repositories/network/rb/jmettraux-rufus-jig/spec/jig/get_spec.rb
p
0
x
E
8
US-ASCII
8
describe
s
E
5
UTF-8
4
#get
M
1
p
2
x
E
8
US-ASCII
9
for_block
t
n
x
E
8
US-ASCII
9
__block__
i
69
59
48
0
91
93
0
12
1
93
0
1
74
2
1
93
0
35
59
48
3
91
93
0
12
4
93
0
1
74
2
1
93
0
35
59
48
5
91
93
0
12
6
93
0
1
74
2
1
93
0
35
59
48
7
91
93
0
12
8
93
0
1
74
2
1
93
0
70
0
I
4
I
0
I
0
I
0
I
0
I
0
n
n
I
0
p
9
s
E
5
UTF-8
10
by default
M
1
p
2
x
E
8
US-ASCII
9
for_block
t
n
x
E
8
US-ASCII
9
__block__
i
69
59
48
0
91
93
0
12
1
93
0
1
74
2
1
93
0
35
59
48
3
91
93
0
12
4
93
0
1
74
2
1
93
0
35
59
48
5
91
93
0
12
6
93
0
1
74
2
1
93
0
35
59
48
7
91
93
0
12
8
93
0
1
74
2
1
93
0
70
0
I
4
I
0
I
0
I
0
I
0
I
0
n
n
I
0
p
9
s
E
5
UTF-8
17
decodes from JSON
M
1
p
2
x
E
8
US-ASCII
9
for_block
t
n
x
E
8
US-ASCII
9
__block__
i
54
47
0
93
0
48
1
91
93
0
73
2
1
93
0
72
3
93
0
41
16
4
93
0
46
1
73
5
1
93
0
13
48
6
91
93
0
48
7
91
93
0
73
8
2
93
0
35
73
9
1
93
0
70
0
I
6
I
0
I
0
I
0
I
0
I
0
n
n
I
0
p
10
x
E
8
US-ASCII
2
@h
s
E
5
UTF-8
9
/document
x
E
8
US-ASCII
3
get
x
E
8
US-ASCII
6
should
x
E
8
US-ASCII
4
Hash
x
E
8
US-ASCII
16
new_from_literal
s
E
5
UTF-8
3
car
s
E
5
UTF-8
13
Mercedes-Benz
x
E
8
US-ASCII
3
[]=
x
E
8
US-ASCII
2
==
p
5
I
-1
I
29
I
0
I
2b
I
36
x
E
8
US-ASCII
64
repositories/network/rb/jmettraux-rufus-jig/spec/jig/get_spec.rb
p
0
x
E
8
US-ASCII
2
it
s
E
5
UTF-8
26
returns nil in case of 404
M
1
p
2
x
E
8
US-ASCII
9
for_block
t
n
x
E
8
US-ASCII
9
__block__
i
26
47
0
93
0
48
1
91
93
0
73
2
1
93
0
72
3
93
0
55
73
4
1
93
0
70
0
I
3
I
0
I
0
I
0
I
0
I
0
n
n
I
0
p
5
x
E
8
US-ASCII
2
@h
s
E
5
UTF-8
5
/nada
x
E
8
US-ASCII
3
get
x
E
8
US-ASCII
6
should
x
E
8
US-ASCII
2
==
p
5
I
-1
I
2e
I
0
I
30
I
1a
x
E
8
US-ASCII
64
repositories/network/rb/jmettraux-rufus-jig/spec/jig/get_spec.rb
p
0
s
E
5
UTF-8
39
raises an error in case of server error
M
1
p
2
x
E
8
US-ASCII
9
for_block
t
n
x
E
8
US-ASCII
9
__block__
i
37
59
12
0
93
0
1
74
1
0
93
0
59
40
2
93
0
16
3
93
0
16
4
93
0
1
73
5
1
93
0
73
6
1
93
0
70
0
I
4
I
0
I
0
I
0
I
0
I
0
n
n
I
0
p
7
M
1
p
2
x
E
8
US-ASCII
9
for_block
t
n
x
E
8
US-ASCII
9
__block__
i
16
47
0
93
0
48
1
91
93
0
73
2
1
93
0
70
0
I
3
I
0
I
0
I
0
I
0
I
0
n
n
I
0
p
3
x
E
8
US-ASCII
2
@h
s
E
5
UTF-8
13
/server_error
x
E
8
US-ASCII
3
get
p
5
I
-1
I
35
I
0
I
36
I
10
x
E
8
US-ASCII
64
repositories/network/rb/jmettraux-rufus-jig/spec/jig/get_spec.rb
p
0
x
E
8
US-ASCII
6
lambda
x
E
8
US-ASCII
5
Rufus
x
E
8
US-ASCII
3
Jig
x
E
8
US-ASCII
9
HttpError
x
E
8
US-ASCII
11
raise_error
x
E
8
US-ASCII
6
should
p
9
I
-1
I
33
I
0
I
35
I
b
I
37
I
1e
I
35
I
25
x
E
8
US-ASCII
64
repositories/network/rb/jmettraux-rufus-jig/spec/jig/get_spec.rb
p
0
s
E
5
UTF-8
26
is OK with a non-ASCII URI
M
1
p
2
x
E
8
US-ASCII
9
for_block
t
n
x
E
8
US-ASCII
9
__block__
i
26
47
0
93
0
48
1
91
93
0
73
2
1
93
0
72
3
93
0
55
73
4
1
93
0
70
0
I
3
I
0
I
0
I
0
I
0
I
0
n
n
I
0
p
5
x
E
8
US-ASCII
2
@h
s
E
5
UTF-8
7
/川崎
x
E
8
US-ASCII
3
get
x
E
8
US-ASCII
6
should
x
E
8
US-ASCII
2
==
p
5
I
-1
I
3a
I
0
I
3c
I
1a
x
E
8
US-ASCII
64
repositories/network/rb/jmettraux-rufus-jig/spec/jig/get_spec.rb
p
0
p
11
I
-1
I
27
I
0
I
29
I
11
I
2e
I
22
I
33
I
33
I
3a
I
45
x
E
8
US-ASCII
64
repositories/network/rb/jmettraux-rufus-jig/spec/jig/get_spec.rb
p
0
x
E
8
US-ASCII
7
context
s
E
5
UTF-8
17
with :raw => true
M
1
p
2
x
E
8
US-ASCII
9
for_block
t
n
x
E
8
US-ASCII
9
__block__
i
35
59
48
0
91
93
0
12
1
93
0
1
74
2
1
93
0
35
59
48
3
91
93
0
12
4
93
0
1
74
2
1
93
0
70
0
I
4
I
0
I
0
I
0
I
0
I
0
n
n
I
0
p
5
s
E
5
UTF-8
33
returns an HTTP response instance
M
1
p
2
x
E
8
US-ASCII
9
for_block
t
n
x
E
8
US-ASCII
9
__block__
i
79
47
0
93
0
48
1
91
93
0
41
16
2
93
0
46
1
73
3
1
93
0
13
48
4
61
73
5
2
93
0
35
73
6
2
93
0
83
0
35
49
0
72
7
93
0
72
8
93
0
46
200
73
9
1
93
0
35
49
0
72
10
93
0
72
8
93
0
48
11
91
93
0
73
9
1
93
0
70
0
I
8
I
1
I
0
I
0
I
0
I
0
n
n
I
0
p
12
x
E
8
US-ASCII
2
@h
s
E
5
UTF-8
9
/document
x
E
8
US-ASCII
4
Hash
x
E
8
US-ASCII
16
new_from_literal
x
E
8
US-ASCII
3
raw
x
E
8
US-ASCII
3
[]=
x
E
8
US-ASCII
3
get
x
E
8
US-ASCII
6
status
x
E
8
US-ASCII
6
should
x
E
8
US-ASCII
2
==
x
E
8
US-ASCII
4
body
s
E
5
UTF-8
23
{"car":"Mercedes-Benz"}
p
9
I
-1
I
42
I
0
I
44
I
27
I
46
I
39
I
47
I
4f
x
E
8
US-ASCII
64
repositories/network/rb/jmettraux-rufus-jig/spec/jig/get_spec.rb
p
1
x
E
8
US-ASCII
1
r
x
E
8
US-ASCII
2
it
s
E
5
UTF-8
46
doesn't raise an error in case of server error
M
1
p
2
x
E
8
US-ASCII
9
for_block
t
n
x
E
8
US-ASCII
9
__block__
i
22
59
12
0
93
0
1
74
1
0
93
0
78
2
93
0
73
3
1
93
0
70
0
I
3
I
0
I
0
I
0
I
0
I
0
n
n
I
0
p
4
M
1
p
2
x
E
8
US-ASCII
9
for_block
t
n
x
E
8
US-ASCII
9
__block__
i
38
47
0
93
0
48
1
91
93
0
41
16
2
93
0
46
1
73
3
1
93
0
13
48
4
61
73
5
2
93
0
35
73
6
2
93
0
70
0
I
7
I
0
I
0
I
0
I
0
I
0
n
n
I
0
p
7
x
E
8
US-ASCII
2
@h
s
E
5
UTF-8
13
/server_error
x
E
8
US-ASCII
4
Hash
x
E
8
US-ASCII
16
new_from_literal
x
E
8
US-ASCII
3
raw
x
E
8
US-ASCII
3
[]=
x
E
8
US-ASCII
3
get
p
5
I
-1
I
4c
I
0
I
4d
I
26
x
E
8
US-ASCII
64
repositories/network/rb/jmettraux-rufus-jig/spec/jig/get_spec.rb
p
0
x
E
8
US-ASCII
6
lambda
x
E
8
US-ASCII
11
raise_error
x
E
8
US-ASCII
10
should_not
p
9
I
-1
I
4a
I
0
I
4c
I
b
I
4e
I
f
I
4c
I
16
x
E
8
US-ASCII
64
repositories/network/rb/jmettraux-rufus-jig/spec/jig/get_spec.rb
p
0
p
7
I
-1
I
40
I
0
I
42
I
11
I
4a
I
23
x
E
8
US-ASCII
64
repositories/network/rb/jmettraux-rufus-jig/spec/jig/get_spec.rb
p
0
s
E
5
UTF-8
25
with :accept => mime_type
M
1
p
2
x
E
8
US-ASCII
9
for_block
t
n
x
E
8
US-ASCII
9
__block__
i
52
59
48
0
91
93
0
12
1
93
0
1
74
2
1
93
0
35
59
48
3
91
93
0
12
4
93
0
1
74
2
1
93
0
35
59
48
5
91
93
0
12
6
93
0
1
74
2
1
93
0
70
0
I
4
I
0
I
0
I
0
I
0
I
0
n
n
I
0
p
7
s
E
5
UTF-8
22
returns the text/plain
M
1
p
2
x
E
8
US-ASCII
9
for_block
t
n
x
E
8
US-ASCII
9
__block__
i
56
47
0
93
0
48
1
91
93
0
41
16
2
93
0
46
1
73
3
1
93
0
13
48
4
48
5
91
93
0
73
6
2
93
0
35
73
7
2
93
0
72
8
93
0
48
9
91
93
0
73
10
1
93
0
70
0
I
7
I
0
I
0
I
0
I
0
I
0
n
n
I
0
p
11
x
E
8
US-ASCII
2
@h
s
E
5
UTF-8
16
/document_accept
x
E
8
US-ASCII
4
Hash
x
E
8
US-ASCII
16
new_from_literal
x
E
8
US-ASCII
6
accept
s
E
5
UTF-8
10
text/plain
x
E
8
US-ASCII
3
[]=
x
E
8
US-ASCII
3
get
x
E
8
US-ASCII
6
should
s
E
5
UTF-8
14
{"car":"Saab"}
x
E
8
US-ASCII
2
==
p
7
I
-1
I
54
I
0
I
56
I
2c
I
57
I
38
x
E
8
US-ASCII
64
repositories/network/rb/jmettraux-rufus-jig/spec/jig/get_spec.rb
p
0
x
E
8
US-ASCII
2
it
s
E
5
UTF-8
28
returns the application/json
M
1
p
2
x
E
8
US-ASCII
9
for_block
t
n
x
E
8
US-ASCII
9
__block__
i
80
47
0
93
0
48
1
91
93
0
41
16
2
93
0
46
1
73
3
1
93
0
13
48
4
48
5
91
93
0
73
6
2
93
0
35
73
7
2
93
0
72
8
93
0
41
16
2
93
0
46
1
73
3
1
93
0
13
48
9
91
93
0
48
10
91
93
0
73
6
2
93
0
35
73
11
1
93
0
70
0
I
7
I
0
I
0
I
0
I
0
I
0
n
n
I
0
p
12
x
E
8
US-ASCII
2
@h
s
E
5
UTF-8
16
/document_accept
x
E
8
US-ASCII
4
Hash
x
E
8
US-ASCII
16
new_from_literal
x
E
8
US-ASCII
6
accept
s
E
5
UTF-8
16
application/json
x
E
8
US-ASCII
3
[]=
x
E
8
US-ASCII
3
get
x
E
8
US-ASCII
6
should
s
E
5
UTF-8
3
car
s
E
5
UTF-8
4
Saab
x
E
8
US-ASCII
2
==
p
7
I
-1
I
5a
I
0
I
5c
I
2c
I
5d
I
50
x
E
8
US-ASCII
64
repositories/network/rb/jmettraux-rufus-jig/spec/jig/get_spec.rb
p
0
s
E
5
UTF-8
34
returns JSON when :accept => :json
M
1
p
2
x
E
8
US-ASCII
9
for_block
t
n
x
E
8
US-ASCII
9
__block__
i
77
47
0
93
0
48
1
91
93
0
41
16
2
93
0
46
1
73
3
1
93
0
13
48
4
48
5
73
6
2
93
0
35
73
7
2
93
0
72
8
93
0
41
16
2
93
0
46
1
73
3
1
93
0
13
48
9
91
93
0
48
10
91
93
0
73
6
2
93
0
35
73
11
1
93
0
70
0
I
7
I
0
I
0
I
0
I
0
I
0
n
n
I
0
p
12
x
E
8
US-ASCII
2
@h
s
E
5
UTF-8
16
/document_accept
x
E
8
US-ASCII
4
Hash
x
E
8
US-ASCII
16
new_from_literal
x
E
8
US-ASCII
6
accept
x
E
8
US-ASCII
4
json
x
E
8
US-ASCII
3
[]=
x
E
8
US-ASCII
3
get
x
E
8
US-ASCII
6
should
s
E
5
UTF-8
3
car
s
E
5
UTF-8
4
Saab
x
E
8
US-ASCII
2
==
p
7
I
-1
I
60
I
0
I
62
I
29
I
63
I
4d
x
E
8
US-ASCII
64
repositories/network/rb/jmettraux-rufus-jig/spec/jig/get_spec.rb
p
0
p
9
I
-1
I
52
I
0
I
54
I
11
I
5a
I
22
I
60
I
34
x
E
8
US-ASCII
64
repositories/network/rb/jmettraux-rufus-jig/spec/jig/get_spec.rb
p
0
s
E
5
UTF-8
24
with :force_json => true
M
1
p
2
x
E
8
US-ASCII
9
for_block
t
n
x
E
8
US-ASCII
9
__block__
i
18
59
48
0
91
93
0
12
1
93
0
1
74
2
1
93
0
70
0
I
4
I
0
I
0
I
0
I
0
I
0
n
n
I
0
p
3
s
E
5
UTF-8
19
returns JSON anyway
M
1
p
2
x
E
8
US-ASCII
9
for_block
t
n
x
E
8
US-ASCII
9
__block__
i
152
47
0
93
0
48
1
91
93
0
41
16
2
93
0
46
1
73
3
1
93
0
13
48
4
48
5
73
6
2
93
0
35
73
7
2
93
0
72
8
93
0
41
16
2
93
0
46
1
73
3
1
93
0
13
48
9
91
93
0
48
10
91
93
0
73
6
2
93
0
35
73
11
1
93
0
35
47
0
93
0
48
12
91
93
0
41
16
2
93
0
46
1
73
3
1
93
0
13
48
13
61
73
6
2
93
0
35
73
7
2
93
0
72
8
93
0
41
16
2
93
0
46
1
73
3
1
93
0
13
48
9
91
93
0
48
14
91
93
0
73
6
2
93
0
35
73
11
1
93
0
70
0
I
7
I
0
I
0
I
0
I
0
I
0
n
n
I
0
p
15
x
E
8
US-ASCII
2
@h
s
E
5
UTF-8
16
/document_accept
x
E
8
US-ASCII
4
Hash
x
E
8
US-ASCII
16
new_from_literal
x
E
8
US-ASCII
6
accept
x
E
8
US-ASCII
4
json
x
E
8
US-ASCII
3
[]=
x
E
8
US-ASCII
3
get
x
E
8
US-ASCII
6
should
s
E
5
UTF-8
3
car
s
E
5
UTF-8
4
Saab
x
E
8
US-ASCII
2
==
s
E
5
UTF-8
20
/document_json_plain
x
E
8
US-ASCII
10
force_json
s
E
5
UTF-8
7
Peugeot
p
11
I
-1
I
69
I
0
I
6b
I
29
I
6c
I
4c
I
6e
I
74
I
6f
I
98
x
E
8
US-ASCII
64
repositories/network/rb/jmettraux-rufus-jig/spec/jig/get_spec.rb
p
0
x
E
8
US-ASCII
2
it
p
5
I
-1
I
67
I
0
I
69
I
12
x
E
8
US-ASCII
64
repositories/network/rb/jmettraux-rufus-jig/spec/jig/get_spec.rb
p
0
p
11
I
-1
I
25
I
0
I
27
I
11
I
40
I
22
I
52
I
33
I
67
I
45
x
E
8
US-ASCII
64
repositories/network/rb/jmettraux-rufus-jig/spec/jig/get_spec.rb
p
0
p
11
I
-1
I
c
I
0
I
e
I
e
I
12
I
1c
I
16
I
2d
I
25
I
3f
x
E
8
US-ASCII
64
repositories/network/rb/jmettraux-rufus-jig/spec/jig/get_spec.rb
p
0
x
E
8
US-ASCII
8
describe
p
5
I
0
I
9
I
1a
I
c
I
35
x
E
8
US-ASCII
64
repositories/network/rb/jmettraux-rufus-jig/spec/jig/get_spec.rb
p
0
